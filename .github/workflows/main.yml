name: "Main Pipeline"
on:
  push:
  workflow_dispatch:
permissions:
  security-events: write
  actions: read
jobs:
  build:
    name: "üî® Build"
    runs-on: ubuntu-latest
    steps:
      - name: "Repo Checkout"
        uses: actions/checkout@v4
      - name: "Setup Java environment"
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "oracle"
      - name: "Build with Maven"
        run: |
          pushd backend
          mvn compile package -DskipTests
          popd
  sast-bearer:
    name: "üêª‚Äç‚ùÑÔ∏è Bearer CLI"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: "Repo Checkout"
        uses: actions/checkout@v4
      - name: "Bearer Scan"
        uses: bearer/bearer-action@v2
        with:
          format: sarif
          output: results.sarif
        continue-on-error: true
      - name: "Upload to GitHub Code Scanning"
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
    continue-on-error: true
  sca-kics:
    name: "ü´è Checkmarx KICS"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: "Repo Checkout"
        uses: actions/checkout@v4
      - name: "KICS Scan"
        uses: checkmarx/kics-github-action@v2
        with:
          path: '.,backend/'
          output_path: reports/
          output_formats: 'sarif'
        continue-on-error: true
      - name: "Upload to GitHub Code Scanning"
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/results.sarif
    continue-on-error: true
  dependency-check:
    name: "üêù DependencyCheck"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: "Repo Checkout"
        uses: actions/checkout@v4
      - name: "Get Dependency Check"
        run: |
          VERSION=$(curl -s https://jeremylong.github.io/DependencyCheck/current.txt)
          curl -Ls "https://github.com/jeremylong/DependencyCheck/releases/download/v$VERSION/dependency-check-$VERSION-release.zip" \
            --output dependency-check.zip
          unzip dependency-check.zip
      - name: "Dependency Check Scan"
        run: ./dependency-check/bin/dependency-check.sh --out results.sarif --scan ./backend --format SARIF --nvdApiKey {{ secrets.NVD_API_SECRET }}
      - name: "Upload to GitHub Code Scanning"
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
